<!DOCTYPE html>
<html>
	<head>
		<meta charset="UTF-8">
		<title>
			{% block title %}Welcome!
			{% endblock %}
		</title>
		<link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 128 128%22><text y=%221.2em%22 font-size=%2296%22>⚫️</text></svg>">
		{# Run `composer require symfony/webpack-encore-bundle` to start using Symfony UX #}
		<!-- Font Awesome -->
		<link
		rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"/> <!-- Google Fonts Roboto -->
		<link
		rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap"/>
		<!-- MDB ESSENTIAL -->
		<link rel="stylesheet" href="/css/mdb.min.css"/>
		<!-- MDB PLUGINS -->
		{# <link
				rel="stylesheet" href="/css/mdb-plugins.min.css"/> #}
		<link
		rel="stylesheet" href="/plugins/css/all.min.css"/> <!-- Custom styles -->
		<link rel="stylesheet" href="/css/style.css"/>
	</head>
	<body>
		{% include "components/navbar.html.twig" %}
		<div class="container"> {% block body %}{% endblock %}
			</div>

			<!-- MDB ESSENTIAL -->
			<script type="text/javascript" src="/js/mdb.min.js"></script>
			<!-- MDB PLUGINS -->
			<script type="text/javascript" src="/plugins/js/all.min.js"></script>
			<script>
				const eventSource = new EventSource("{{ mercure('https://localhost/users/3/messages')|escape('js') }}");
				eventSource.onmessage = event => { // Will be called every time an update is published by the server
				console.log(JSON.parse(event.data));
				const element = document.getElementById("message-box");
				console.log(element);

				
				const messageContainer = document.createElement("span");
				messageContainer.innerHTML = JSON.parse(event.data).content;
				console.log(messageContainer);

			
				const messageReceived = document.getElementsByClassName("received");
				const clone = messageReceived[0].cloneNode(true);
				console.log(messageReceived[0], clone);

				clone.getElementsByTagName("p")[0].innerText = JSON.parse(event.data).content;
				element.appendChild(clone);
				console.log(clone.getElementsByTagName("p")[0])

				 // Écouter l'événement click du bouton Send
  				document.getElementById('button-addon2').addEventListener('click', sendMessage);
				
				  // Fonction pour envoyer un message
				function sendMessage() {
					const message = inputMessage.value; // Récupérer le texte du champ d'entrée
					if (message) {
					const receivedMessageElement = createMessageElement(message, 'received');
					messageBox.appendChild(receivedMessageElement);
					inputMessage.value = ''; // Effacer le champ d'entrée après l'envoi
					messageBox.scrollTop = messageBox.scrollHeight; // Faire défiler vers le bas pour afficher le nouveau message
					}
				}
				
				const messageSent = document.getElementsByClassName("sent");
				const clone = messageSent[0].cloneNode(true);
				console.log(messageSent[0], clone);

				clone.getElementsByTagName("p")[0].innerText = JSON.parse(event.data).content;
				element.appendChild(clone);
				console.log(clone.getElementsByTagName("p")[0])

				//const bulle = document.createElement("div");
				//const idBulle = document.querySelector("#message");
				
				//document.idBulle.appendChild(bulle);
				//bulle.setAttribute("id","bulle");
				//document.idBulle.appendChild(messageContainer);


				}
			</script>

			
		</body>
	</html>
